name: Move Issue to In Progress

on:
  issues:
    types: [labeled, assigned]

permissions:
  issues: write
  contents: write 

jobs:
  move_issue:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request == null
    steps:
      - name: Check if issue is assigned
        id: check_issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const isAssigned = context.payload.issue.assignee !== null;
            console.log("Is assigned:", isAssigned);
            return { moveIssue: isAssigned };

      - name: Move issue to 'In Progress' if assigned
        if: steps.check_issue.outputs.moveIssue == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const projectNumber = 16; // Replace with your actual project number
            const repoName = context.repo.repo;
            const owner = context.repo.owner;
            const issueNumber = context.payload.issue.number;

            console.log("Retrieving projects for repository:", owner, "/", repoName);
            const projects = await github.rest.projects.listForRepo({
              owner: owner,
              repo: repoName
            });

            const project = projects.data.find(proj => proj.number === projectNumber);
            if (!project) {
              console.log("Project not found.");
              return;
            }

            const projectId = project.id;
            console.log("Project ID:", projectId);

            console.log("Listing columns for project ID:", projectId);
            const columns = await github.rest.projects.listColumns({
              project_id: projectId
            });

            const backlogsColumn = columns.data.find(col => col.name === 'Backlogs');
            const inProgressColumn = columns.data.find(col => col.name === 'In Progress');
            if (!backlogsColumn || !inProgressColumn) {
              console.log("Backlogs or In Progress column not found.");
              return;
            }

            console.log("Backlogs Column ID:", backlogsColumn.id, "In Progress Column ID:", inProgressColumn.id);

            console.log("Searching for issue card in Backlogs column.");
            const card = await github.rest.projects.listCards({
              column_id: backlogsColumn.id
            }).then(cards => cards.data.find(card => card.content_url.endsWith(issueNumber.toString())));

            if (card) {
              console.log("Card found:", card.id);
              await github.rest.projects.moveCard({
                card_id: card.id,
                column_id: inProgressColumn.id,
                position: 'top'
              });
              console.log("Card moved to In Progress.");
            } else {
              console.log("Card not found in Backlogs column.");
            }
